1) Microsoft Visual Studio Professional 2019 (WinSDKVersion=10.0.18362.0 == WindowsTargetPlatformVersion=10.0.18362.0)
Visual Studio 2019 Professional 16.6.2
Upgraded to 16.6.2

2) wxWidgets 
https://www.wxwidgets.org/downloads/
Windows Installer -> wxMSW-3.1.3-Setup.exe
Setup Env: WX_WIDGETS_PATH=C:\wxWidgets-3.1.3
Open "%WX_WIDGETS_PATH%\build\msw\wx_vc16.sln" in Visual Studio 2019.
Set in all projects "C++\Code Generation\Runtime Library" to /MTd in "Debug/(x64/Win32)" mode and /MT in "Release/(x64/Win32)" mode.
Build all projects in "(Debug/Release)/(x64/Win32)" mode.

3) Install CUDA Toolkit 11.0
https://developer.nvidia.com/cuda-downloads
cuda_11.0.1_451.22_win10.exe
Setup Env: CUDA_TOOLKIT_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.0

should exist

4) OpenCV
Download from
https://sourceforge.net/projects/opencvlibrary/files/4.3.0/
OpenCV 4.3.0.zip ( opencv-4.3.0-dldt-2020.2-vc16-avx2.zip unfortunately working only on avx2 cpu)
Extract OpenCV 4.3.0.zip to C:\OpenCV 4.3.0
Docs:
https://docs.opencv.org/4.3.0/d8/dfe/classcv_1_1VideoCapture.html#a85b55cf6a4a50451367ba96b65218ba1
https://github.com/opencv/opencv/wiki/OE-25.-Fast-VideoIO

Setup Env: 
OPENCV_PATH_X64=C:\OpenCV 4.3.0\opencv-opencv-207f357
OPENCV_PATH_X86=C:\OpenCV 4.3.0\opencv-opencv-207f357
after build should exist:
%OPENCV_PATH_X64%\builds\Win64\install\include
%OPENCV_DIR%\opencv\build\lib
opencv_core430.lib
opencv_videoio430.lib
opencv_imgproc430.lib
opencv_imgcodecs430.lib

https://perso.uclouvain.be/allan.barrea/opencv/cmake_config.html
https://jamesbowley.co.uk/build-compile-opencv-3-4-in-windows-with-cuda-9-0-and-intel-mkl-tbb/
https://stackoverflow.com/questions/14172856/compile-with-mt-instead-of-md-using-cmake

CMake 3.14+ required for VS2019 build
https://cmake.org/download/
https://github.com/opencv/opencv/wiki/Intel%27s-Deep-Learning-Inference-Engine-backend
used: cmake-3.18.0-rc1-win64-x64.msi

Run: C:\Program Files\CMake\bin\cmake-gui.exe
select source directory: C:/OpenCV 4.3.0/opencv-opencv-207f357
select build directory: C:/OpenCV 4.3.0/opencv-opencv-207f357/builds/(Win32/Win64)
Enable the Grouped and Advanced checkboxes just below the build directory name.
Press the “Configure” button.
Pick Visual Studio 16 2019
Platform (Win32/x64)
finish
!!! * Select BUILD_opencv_world=ON *
Press again Configure
Press generate
Press open project
Build in Debug and Release mode for Platform Win32 and Win64
+ Build INSTALL project in CMakeTargets folder for Win64

5)
download and extract:
https://ffmpeg.org/download.html
https://ffmpeg.zeranoe.com/builds/
Docs:
https://www.ffmpeg.org/doxygen/trunk/hwcontext_8c.html
https://ffmpeg.org/ffmpeg.html
ffmpeg-4.3-win32-dev.zip
ffmpeg-4.3-win32-shared.zip
ffmpeg-4.3-win64-dev.zip
ffmpeg-4.3-win64-shared.zip
Setup Env:
FFMPEG_PATH_X64=C:\ffmpeg-4.3-win64-dev
FFMPEG_PATH_X86=C:\ffmpeg-4.3-win32-dev

6)
#old: Setup Env: WinSDKVersion=10.0.18362.0
Open "Interfaces\VideoSubFinderWXW\VideoSubFinderWXW.sln" in VS 2019.
Build solution in "Debug/x64" mode and in "Release/x64" mode.

7)
Intel Parallel Studio XE 2020 Cluster Edition Update 1
for "Task Analysis"
https://software.intel.com/content/www/us/en/develop/documentation/vtune-help/top/analyze-performance/code-profiling-scenarios/task-analysis.html
https://software.intel.com/content/www/us/en/develop/documentation/vtune-help/top/api-support/instrumentation-and-tracing-technology-apis/instrumentation-and-tracing-technology-api-reference/task-api.html

